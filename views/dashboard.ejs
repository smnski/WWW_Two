<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Liczenie Kalorii</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="/css/dashboardStyles.css" rel="stylesheet">
</head>

<body class="bg-light vh-100">
  <div class="container-fluid h-100 d-flex flex-column">
    <div class="row mb-1 mt-1">
      <div class="col-12">
        <div class="button-container">
          aaa
        </div>
      </div>
    </div>
    
    <div class="row flex-grow-1">
      <!-- Left Column: meals div -->
      <div class="col-5 d-flex mb-1">
        <div class="button-container flex-grow-1 overflow-auto" style="max-height: 100%;">
          <div class="text-center mb-3">
            <button class="btn btn-primary" id="addMealButton">Add Recipe to Today</button>
          </div>
          
          <% if (meals.length > 0) { %>
            <% meals.forEach(meal => { %>
              <div class="card card-container mb-3" id="meal-<%= meal._id %>">
                <div class="card-body">
                  <h5 class="card-title"><%= meal.name %></h5>
                  <p class="card-text">Calories: <%= meal.calories %></p>
                  <p class="card-text">Protein: <%= meal.protein %>g</p>
                  <p class="card-text">Carbohydrates: <%= meal.carbohydrates %>g</p>
                  <p class="card-text">Fats: <%= meal.fats %>g</p>
                </div>
              </div>
            <% }); %>
          <% } else { %>
            <p class="text-center" id="noMealsMessage">No meals added for today!</p>
          <% } %>
        </div>
      </div>
      
      <!-- Right Column: Other Divs -->
      <div class="col-7 d-flex flex-column">
        <div class="row flex-grow-1 mb-1">
          <div class="col d-flex">
            <div class="button-container flex-grow-1">
              ccc
            </div>
          </div>
          <div class="col d-flex">
            <div class="button-container flex-grow-1">
              ddd
            </div>
          </div>
        </div>
        <div class="row flex-grow-1">
          <div class="col d-flex">
            <div class="button-container flex-grow-1">
              eee
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Modal -->
  <div class="modal fade" id="recipeModal" tabindex="-1" aria-labelledby="recipeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="recipeModalLabel">Select a Recipe</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <ul id="recipeList" class="list-group">
            <!-- Recipes will be dynamically populated here -->
          </ul>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.getElementById('addMealButton').addEventListener('click', async () => {
      try {
        const response = await fetch('/dashboard/recipes');
        const recipes = await response.json();
        const recipeList = document.getElementById('recipeList');
        recipeList.innerHTML = ''; // Clear previous entries

        recipes.forEach(recipe => {
          const listItem = document.createElement('li');
          listItem.className = 'list-group-item d-flex justify-content-between align-items-center';
          listItem.innerHTML = `
            <span>${recipe.name} (Calories: ${recipe.calories})</span>
            <button class="btn btn-sm btn-primary add-recipe" data-id="${recipe._id}">Add</button>
          `;
          recipeList.appendChild(listItem);
        });

        document.querySelectorAll('.add-recipe').forEach(button => {
          button.addEventListener('click', async () => {
            const recipeId = button.getAttribute('data-id');
            try {
              const addResponse = await fetch('/dashboard/add-meal', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ recipeId })
              });

              if (addResponse.ok) {
                const meal = await addResponse.json();  // Assuming the backend returns the added meal details

                // Dynamically add the new meal to the meal list
                const mealCard = document.createElement('div');
                mealCard.classList.add('card', 'card-container', 'mb-3');
                mealCard.id = `meal-${meal._id}`;
                mealCard.innerHTML = `
                  <div class="card-body">
                    <h5 class="card-title">${meal.name}</h5>
                    <p class="card-text">Calories: ${meal.calories}</p>
                    <p class="card-text">Protein: ${meal.protein}g</p>
                    <p class="card-text">Carbohydrates: ${meal.carbohydrates}g</p>
                    <p class="card-text">Fats: ${meal.fats}g</p>
                  </div>
                `;
                document.querySelector('.button-container.flex-grow-1').appendChild(mealCard);

                // Hide the "No meals added" message if meals exist now
                const noMealsMessage = document.getElementById('noMealsMessage');
                if (noMealsMessage) {
                  noMealsMessage.style.display = 'none';
                }

                // Close the modal correctly
                const modal = bootstrap.Modal.getInstance(document.getElementById('recipeModal'));
                modal.hide();
              } else {
                alert('Failed to add recipe.');
              }
            } catch (error) {
              console.error('Error:', error);
            }
          });
        });

        // Show the modal
        const modal = new bootstrap.Modal(document.getElementById('recipeModal'));
        modal.show();
      } catch (error) {
        console.error('Error fetching recipes:', error);
      }
    });
  </script>
</body>
</html>
